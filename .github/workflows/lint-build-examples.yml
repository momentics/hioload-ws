name: Lint, Build & Test (Linux & Windows)

on:
  push:
    branches: [main, develop]
  pull_request:

env:
  GO_VERSION: "1.23"
  GOEXPERIMENT: aliastypeparams
  CGO_ENABLED: "0"
  GO111MODULE: "on"

jobs:
  build-test:
    name: Build, Lint & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      CGO_ENABLED: "0"
      GOEXPERIMENT: aliastypeparams

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod tidy

      - name: Run linters
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...

      - name: Run library tests
        run: |
          go test ./control/... ./api/... ./adapters/... ./pool/... ./protocol/... ./facade/... ./internal/session/... -v -timeout 10m

      - name: Run example tests
        run: |
          go test ./examples/broadcast/... ./examples/echo/... -v -timeout 5m

      - name: Run internal transport & websocket tests
        run: |
          go test ./internal/transport/... ./internal/websocket/... ./internal/concurrency/... -v -timeout 10m

      - name: Build examples
        shell: bash
        working-directory: ./examples
        run: |
          mkdir -p ../dist/${{ matrix.os }}
          for dir in */; do
            [ -f "$dir/main.go" ] || continue
            out="../dist/${{ matrix.os }}/${dir%/}"
            if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
              CGO_ENABLED=0 GOOS=windows GOEXPERIMENT=aliastypeparams go build -o "${out}.exe" "./$dir"
            else
              CGO_ENABLED=0 GOOS=linux GOEXPERIMENT=aliastypeparams go build -o "${out}" "./$dir"
            fi
          done

      - name: Upload example binaries
        uses: actions/upload-artifact@v4
        with:
          name: example-binaries-${{ matrix.os }}
          path: dist/${{ matrix.os }}/
