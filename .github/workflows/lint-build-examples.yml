# File: .github/workflows/lint-build-examples.yml
# Name: Lint & Build Examples (Windows-only lint)
# Author: momentics <momentics@gmail.com>
# License: Apache-2.0

name: Lint & Build Examples (Windows-only lint)

on:
  push:
    branches: [main, develop]
  pull_request:

env:
  GO_VERSION: "1.23"
  GOEXPERIMENT: aliastypeparams
  CGO_ENABLED: "1"
  GO111MODULE: "on"

jobs:
  lint-windows:
    name: Static Analysis (Windows only)
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install MSYS2 and NUMA dev headers
        run: |
          choco install -y msys2
          refreshenv
          pacboy -S --noconfirm mingw-w64-x86_64-numa

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install golangci-lint CLI
        run: |
          export GOPATH="$(go env GOPATH)"
          mkdir -p "$GOPATH/bin"
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b "$GOPATH/bin" v1.59.0
          echo "$GOPATH/bin" >> $GITHUB_PATH

      - name: Run golangci-lint with Cgo tags
        run: |
          CGO_ENABLED=1 golangci-lint run --timeout 5m --build-tags "windows,cgo"

  build-examples:
    name: Build Examples (Linux & Windows)
    runs-on: ${{ matrix.os }}
    needs: lint-windows
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      GOEXPERIMENT: aliastypeparams
      CGO_ENABLED: "1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build all examples
        working-directory: ./examples
        run: |
          mkdir -p ../../dist/examples/${{ matrix.os }}
          for dir in */; do
            if [ -f "$dir/main.go" ]; then
              echo "Building example: $dir on ${{ matrix.os }}"
              if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                GOOS=windows CGO_ENABLED=1 GOEXPERIMENT=aliastypeparams go build \
                  -o "../../dist/examples/${{ matrix.os }}/${dir%/}.exe" "./$dir"
              else
                GOOS=linux CGO_ENABLED=1 GOEXPERIMENT=aliastypeparams go build \
                  -o "../../dist/examples/${{ matrix.os }}/${dir%/}" "./$dir"
              fi
            fi
          done

      - name: Upload example binaries
        uses: actions/upload-artifact@v4
        with:
          name: example-binaries-${{ matrix.os }}
          path: dist/examples/${{ matrix.os }}/
