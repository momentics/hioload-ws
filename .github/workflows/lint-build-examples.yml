# File: .github/workflows/lint-build-examples.yml
# Name: Lint & Build Examples (Linux & Windows)
# This workflow performs static analysis with golangci-lint (including Cgo)
# and then builds all example programs on Linux and Windows.
#
# Author: momentics <momentics@gmail.com>
# License: Apache-2.0

name: Lint & Build Examples (Linux & Windows)

on:
  push:
    branches: [main, develop]
  pull_request:

env:
  GO_VERSION: "1.23"
  GOEXPERIMENT: aliastypeparams
  CGO_ENABLED: "1"            # Enable Cgo so that Cgo-based files are type-checked
  GO111MODULE: "on"

jobs:
  lint:
    name: Static Analysis
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: ${{ env.CGO_ENABLED }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install libnuma-dev so that Cgo includes <numa.h>
      - name: Install libnuma-dev
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnuma-dev

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          version: v1.59
          args: --timeout 5m
        env:
          GOEXPERIMENT: ${{ env.GOEXPERIMENT }}
          CGO_ENABLED: ${{ env.CGO_ENABLED }}

  build-examples:
    name: Build Examples
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      GOEXPERIMENT: aliastypeparams
      CGO_ENABLED: "1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build all examples
        working-directory: ./examples
        run: |
          mkdir -p ../../dist/examples/${{ matrix.os }}
          for dir in */; do
            if [ -f "$dir/main.go" ]; then
              echo "Building example: $dir on ${{ matrix.os }}"
              if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                GOOS=windows GOEXPERIMENT=aliastypeparams CGO_ENABLED=1 go build -o "../../dist/examples/${{ matrix.os }}/${dir%/}.exe" "./$dir"
              else
                GOOS=linux GOEXPERIMENT=aliastypeparams CGO_ENABLED=1 go build -o "../../dist/examples/${{ matrix.os }}/${dir%/}" "./$dir"
              fi
            fi
          done

      - name: Upload example binaries
        uses: actions/upload-artifact@v4
        with:
          name: example-binaries-${{ matrix.os }}
          path: dist/examples/${{ matrix.os }}/
